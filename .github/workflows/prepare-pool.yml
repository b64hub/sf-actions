name: Prepare pool
on:
  workflow_call:
    inputs:
      pool-tag:
        description: "Pool tag"
        required: true
        type: string
      git-ref:
        description: "Commit Id from where the pools should be created"
        required: false
        default: 'main'
        type: string
      pool-def:
        description: "Relative path to pool definition file. If not provided will use config/project-{pool-tag}-pool-def.json"
        required: false
        type: string
        default: 
      datadog:
        description: "Send metrics to datadog. Secrets must be configured."
        required: false
        type: boolean
        default: false
      newrelic:
        description: "Send metrics to newrelic. Secrets must be configured."
        required: false
        type: boolean
        default: false
    secrets:
      DEVHUB_SFDX_AUTH_URL:
        required: true
      DATADOG_HOST:
        required: false
      DATADOG_API_KEY:
        required: false
      NEWRELIC_INSIGHT_INSERT_KEYS:
        required: false
          
env:
  SFPOWERSCRIPTS_NEWRELIC: "${{ inputs.newrelic }}"
  SFPOWERSCRIPTS_NEWRELIC_API_KEY: '${{ secrets.NEWRELIC_INSIGHT_INSERT_KEYS }}'
  SFPOWERSCRIPTS_DATADOG: "${{ inputs.datadog }}"
  SFPOWERSCRIPTS_DATADOG_HOST: "${{ secrets.DATADOG_HOST }}"
  SFPOWERSCRIPTS_DATADOG_API_KEY: "${{ secrets.DATADOG_API_KEY }}"

jobs:
  pool:
    name: 'Replenish "${{ inputs.pool-tag }}" pool'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:latest
    timeout-minutes: 720 #Set to Maximum Time out
    steps:
      - uses: actions/checkout@v3
        with: 
          ref: ${{ inputs.git-ref }}
          fetch-depth: 0

      - name: "npm install"
        run: |
          npm install
    
      - name: 'Authenticate Dev Hub'
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url -f authfile -a devhub

      # Authenticate to npm
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://npm.pkg.github.com'

      - name: "Prepare a pool of scratch orgs"
        run: "sfp prepare -f ${{ (inputs.pool-def == '' || inputs.pool-def == null) && env.DEFAULT_POOL_DEF || inputs.pool-def }} -v devhub"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_POOL_DEF: 'config/project-${{ inputs.pool-tag}}-pool-def.json'
        
      # Publish artifacts
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: scratchorg-logs-pool-${{ inputs.pool-tag }}
          path: .sfpowerscripts/prepare_logs