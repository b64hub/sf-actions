name: Cleanup Review Org

on:
  pull_request:
    types: [closed]

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
    outputs:
      auth_url: ${{ steps.fetch_auth_url.outputs.result }}
    steps:
      - name: Fetch Auth Url
        id: fetch_auth_url
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = context.issue.number;
            const comments = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
            });

            let authUrl = '';
            const identifier = 'Review org 🌩️';

            for (const comment of comments.data) {
              if (comment.body.includes(identifier)) {
                const matches = comment.body.match(/auth_url:\s*(.*)/);
                if (matches && matches[1]) {
                  authUrl = matches[1].trim();
                  console.log("Auth url found");
                  break;
                }
              }
            }

            console.log(authUrl);

            return authUrl;

  cleanup-on-close:
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:latest
    needs: check
    if: needs.check.outputs.authUrl != '' && needs.check.outputs.authUrl != '""'
    steps:
      - name: "Authenticate Dev Hub"
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url -f authfile -a devhub

      - name: "Authenticate scratch org"
        run: |
          echo ${{ needs.check.outputs.authUrl }} > ./scratch_authfile
          sf org login sfdx-url -f scratch_authfile -a review-org

      - name: "Delete org"
        run: |
          sfp pool:org:delete -u review-org -v devhub
